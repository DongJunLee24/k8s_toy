apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-app
  namespace: k8s-toy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streaming-app
  template:
    metadata:
      labels:
        app: streaming-app
    spec:
      containers:
      - name: streaming-app
        image: oncliff/k8s-toy:app_1.0.102
        resources:
          limits:
            cpu: "1.5"
            memory: "1024Mi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        ports:
          - containerPort: 3001
        env:
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: rds-secret
                key: host
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: rds-secret
                key: username
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rds-secret
                key: password
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: rds-secret
                key: database
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: access
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: secret
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: region
---
apiVersion: v1
kind: Service
metadata:
  name: my-api-service
  namespace: k8s-toy
spec:
  selector:
    app: streaming-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
  type: LoadBalancer # 매니저(manager) 노드에 배포
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: streaming-app-hpa
  namespace: k8s-toy
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: streaming-app
  minReplicas: 1
  maxReplicas: 30
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  behavior:
    scaleDown:
      policies:
        - type: Pods
          value: 4
          periodSeconds: 60
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Max
      stabilizationWindowSeconds: 300
        
